/**
 * @packageDocumentation
 * @module @taquito/beacon-wallet
 */
import { DAppClient, DAppClientOptions, RequestPermissionInput, PermissionScope } from '@airgap/beacon-sdk';
import { WalletDelegateParams, WalletOriginateParams, WalletProvider, WalletTransferParams } from '@taquito/taquito';
export { VERSION } from './version';
export declare class BeaconWalletNotInitialized implements Error {
    name: string;
    message: string;
}
export declare class MissingRequiredScopes implements Error {
    requiredScopes: PermissionScope[];
    name: string;
    message: string;
    constructor(requiredScopes: PermissionScope[]);
}
export declare class BeaconWallet implements WalletProvider {
    client: DAppClient;
    constructor(options: DAppClientOptions);
    private validateRequiredScopesOrFail;
    requestPermissions(request?: RequestPermissionInput): Promise<void>;
    getPKH(): Promise<string>;
    mapTransferParamsToWalletParams(params: WalletTransferParams): Promise<any>;
    mapOriginateParamsToWalletParams(params: WalletOriginateParams): Promise<any>;
    mapDelegateParamsToWalletParams(params: WalletDelegateParams): Promise<any>;
    formatParameters(params: any): any;
    removeDefaultParams(params: WalletTransferParams | WalletOriginateParams | WalletDelegateParams, operatedParams: any): any;
    sendOperations(params: any[]): Promise<string>;
    /**
     *
     * @description Removes all beacon values from the storage. After using this method, this instance is no longer usable.
     * You will have to instanciate a new BeaconWallet.
     */
    disconnect(): Promise<void>;
    /**
     *
     * @description This method removes the active account from local storage by setting it to undefined.
     */
    clearActiveAccount(): Promise<void>;
}
