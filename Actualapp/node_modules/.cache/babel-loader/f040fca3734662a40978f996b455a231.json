{"ast":null,"code":"/**\n * General docs\n * @module public\n */\nimport { P2PCommunicationClient } from './transports/clients/P2PCommunicationClient';\nimport { BeaconMessageType } from './types/beacon/BeaconMessageType';\nimport { PermissionScope } from './types/beacon/PermissionScope';\nimport { NetworkType } from './types/beacon/NetworkType';\nimport { TezosOperationType } from './types/tezos/OperationTypes';\nimport { Origin } from './types/Origin';\nimport { ExtensionMessageTarget } from './types/ExtensionMessageTarget';\nimport { Client } from './clients/client/Client';\nimport { WalletClient } from './clients/wallet-client/WalletClient';\nimport { DAppClient } from './clients/dapp-client/DAppClient';\nimport { BeaconError } from './errors/BeaconError';\nimport { BeaconErrorType } from './types/BeaconErrorType';\nimport { BroadcastBeaconError } from './errors/BroadcastBeaconError';\nimport { NetworkNotSupportedBeaconError } from './errors/NetworkNotSupportedBeaconError';\nimport { NoAddressBeaconError } from './errors/NoAddressBeaconError';\nimport { NoPrivateKeyBeaconError } from './errors/NoPrivateKeyBeaconError';\nimport { NotGrantedBeaconError } from './errors/NotGrantedBeaconError';\nimport { ParametersInvalidBeaconError } from './errors/ParametersInvalidBeaconError';\nimport { TooManyOperationsBeaconError } from './errors/TooManyOperationsBeaconError';\nimport { TransactionInvalidBeaconError } from './errors/TransactionInvalidBeaconError';\nimport { UnknownBeaconError } from './errors/UnknownBeaconError';\nimport { TransportStatus } from './types/transport/TransportStatus';\nimport { TransportType } from './types/transport/TransportType';\nimport { PostMessageTransport } from './transports/PostMessageTransport';\nimport { Transport } from './transports/Transport';\nimport { P2PTransport } from './transports/P2PTransport';\nimport { Storage } from './storage/Storage';\nimport { StorageKey } from './types/storage/StorageKey';\nimport { ChromeStorage } from './storage/ChromeStorage';\nimport { LocalStorage } from './storage/LocalStorage';\nimport { getStorage } from './storage/getStorage';\nimport { Serializer } from './Serializer';\nimport { SDK_VERSION, BEACON_VERSION } from './constants';\nimport { AccountManager } from './managers/AccountManager';\nimport { AppMetadataManager } from './managers/AppMetadataManager';\nimport { PermissionManager } from './managers/PermissionManager';\nimport { BeaconEvent, BeaconEventHandler, defaultEventCallbacks } from './events';\nimport { getAddressFromPublicKey } from './utils/crypto';\nimport { BeaconClient } from './clients/beacon-client/BeaconClient';\nimport { getAccountIdentifier } from './utils/get-account-identifier';\nimport { AbortedBeaconError } from './errors/AbortedBeaconError';\nimport { availableTransports } from './utils/available-transports';\nimport { DappP2PTransport } from './transports/DappP2PTransport';\nimport { DappPostMessageTransport } from './transports/DappPostMessageTransport';\nimport { WalletP2PTransport } from './transports/WalletP2PTransport';\nimport { WalletPostMessageTransport } from './transports/WalletPostMessageTransport';\nimport { getSenderId } from './utils/get-sender-id';\nimport { SigningType } from './types/beacon/SigningType';\nimport { PeerManager } from './managers/PeerManager';\nimport { MessageBasedClient } from './transports/clients/MessageBasedClient';\nimport { Pairing } from './ui/alert/Pairing';\nimport { BlockExplorer } from './utils/block-explorer';\nimport { TezblockBlockExplorer } from './utils/tezblock-blockexplorer';\nimport { setDebugEnabled, getDebugEnabled } from './debug';\nimport { ColorMode } from './types/ColorMode'; // import { EncryptPayloadRequest } from './types/beacon/messages/EncryptPayloadRequest'\n// import { EncryptPayloadResponse } from './types/beacon/messages/EncryptPayloadResponse'\n// import { EncryptionTypeNotSupportedBeaconError } from './errors/EncryptionTypeNotSupportedBeaconError'\n\nimport { SignatureTypeNotSupportedBeaconError } from './errors/SignatureTypeNotSupportedBeaconError'; // import { EncryptionType } from './types/EncryptionType'\n// import { EncryptionOperation } from './types/EncryptionOperation'\n// Tezos\n\nexport { TezosOperationType }; // Clients\n\nexport { BeaconClient, Client, DAppClient, WalletClient, P2PCommunicationClient }; // Beacon\n\nexport { NetworkType, BeaconMessageType, PermissionScope, Origin, SigningType // EncryptionType,\n// EncryptionOperation,\n, ExtensionMessageTarget }; // Errors\n\nexport { BeaconError, BeaconErrorType, AbortedBeaconError, BroadcastBeaconError, NetworkNotSupportedBeaconError, NoAddressBeaconError, NoPrivateKeyBeaconError, NotGrantedBeaconError, ParametersInvalidBeaconError, TooManyOperationsBeaconError, TransactionInvalidBeaconError, SignatureTypeNotSupportedBeaconError // EncryptionTypeNotSupportedBeaconError,\n, UnknownBeaconError }; // Transport\n\nexport { TransportStatus, TransportType, Transport, PostMessageTransport, P2PTransport, WalletP2PTransport, WalletPostMessageTransport, DappP2PTransport, DappPostMessageTransport, MessageBasedClient, Pairing }; // Events\n\nexport { BeaconEvent, BeaconEventHandler, defaultEventCallbacks }; // Storage\n\nexport { Storage, StorageKey, ChromeStorage, LocalStorage, getStorage }; // Managers\n\nexport { PeerManager, AccountManager, AppMetadataManager, PermissionManager }; // Constants\n\nexport { SDK_VERSION, BEACON_VERSION }; // Utils\n\nexport { getSenderId, getAccountIdentifier, getAddressFromPublicKey }; // BlockExplorer\n\nexport { BlockExplorer, TezblockBlockExplorer }; // Others\n\nexport { Serializer, availableTransports, ColorMode }; // Debug\n\nexport { setDebugEnabled, getDebugEnabled };","map":{"version":3,"sources":["../../src/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * General docs\n * @module public\n */\nimport { P2PCommunicationClient } from './transports/clients/P2PCommunicationClient';\nimport { BeaconMessageType } from './types/beacon/BeaconMessageType';\nimport { PermissionScope } from './types/beacon/PermissionScope';\nimport { NetworkType } from './types/beacon/NetworkType';\nimport { TezosOperationType } from './types/tezos/OperationTypes';\nimport { Origin } from './types/Origin';\nimport { ExtensionMessageTarget } from './types/ExtensionMessageTarget';\nimport { Client } from './clients/client/Client';\nimport { WalletClient } from './clients/wallet-client/WalletClient';\nimport { DAppClient } from './clients/dapp-client/DAppClient';\nimport { BeaconError } from './errors/BeaconError';\nimport { BeaconErrorType } from './types/BeaconErrorType';\nimport { BroadcastBeaconError } from './errors/BroadcastBeaconError';\nimport { NetworkNotSupportedBeaconError } from './errors/NetworkNotSupportedBeaconError';\nimport { NoAddressBeaconError } from './errors/NoAddressBeaconError';\nimport { NoPrivateKeyBeaconError } from './errors/NoPrivateKeyBeaconError';\nimport { NotGrantedBeaconError } from './errors/NotGrantedBeaconError';\nimport { ParametersInvalidBeaconError } from './errors/ParametersInvalidBeaconError';\nimport { TooManyOperationsBeaconError } from './errors/TooManyOperationsBeaconError';\nimport { TransactionInvalidBeaconError } from './errors/TransactionInvalidBeaconError';\nimport { UnknownBeaconError } from './errors/UnknownBeaconError';\nimport { TransportStatus } from './types/transport/TransportStatus';\nimport { TransportType } from './types/transport/TransportType';\nimport { PostMessageTransport } from './transports/PostMessageTransport';\nimport { Transport } from './transports/Transport';\nimport { P2PTransport } from './transports/P2PTransport';\nimport { Storage } from './storage/Storage';\nimport { StorageKey } from './types/storage/StorageKey';\nimport { ChromeStorage } from './storage/ChromeStorage';\nimport { LocalStorage } from './storage/LocalStorage';\nimport { getStorage } from './storage/getStorage';\nimport { Serializer } from './Serializer';\nimport { SDK_VERSION, BEACON_VERSION } from './constants';\nimport { AccountManager } from './managers/AccountManager';\nimport { AppMetadataManager } from './managers/AppMetadataManager';\nimport { PermissionManager } from './managers/PermissionManager';\nimport { BeaconEvent, BeaconEventHandler, defaultEventCallbacks } from './events';\nimport { getAddressFromPublicKey } from './utils/crypto';\nimport { BeaconClient } from './clients/beacon-client/BeaconClient';\nimport { getAccountIdentifier } from './utils/get-account-identifier';\nimport { AbortedBeaconError } from './errors/AbortedBeaconError';\nimport { availableTransports } from './utils/available-transports';\nimport { DappP2PTransport } from './transports/DappP2PTransport';\nimport { DappPostMessageTransport } from './transports/DappPostMessageTransport';\nimport { WalletP2PTransport } from './transports/WalletP2PTransport';\nimport { WalletPostMessageTransport } from './transports/WalletPostMessageTransport';\nimport { getSenderId } from './utils/get-sender-id';\nimport { SigningType } from './types/beacon/SigningType';\nimport { PeerManager } from './managers/PeerManager';\nimport { MessageBasedClient } from './transports/clients/MessageBasedClient';\nimport { Pairing } from './ui/alert/Pairing';\nimport { BlockExplorer } from './utils/block-explorer';\nimport { TezblockBlockExplorer } from './utils/tezblock-blockexplorer';\nimport { setDebugEnabled, getDebugEnabled } from './debug';\nimport { ColorMode } from './types/ColorMode';\n// import { EncryptPayloadRequest } from './types/beacon/messages/EncryptPayloadRequest'\n// import { EncryptPayloadResponse } from './types/beacon/messages/EncryptPayloadResponse'\n// import { EncryptionTypeNotSupportedBeaconError } from './errors/EncryptionTypeNotSupportedBeaconError'\nimport { SignatureTypeNotSupportedBeaconError } from './errors/SignatureTypeNotSupportedBeaconError';\n// import { EncryptionType } from './types/EncryptionType'\n// import { EncryptionOperation } from './types/EncryptionOperation'\n// Tezos\nexport { TezosOperationType };\n// Clients\nexport { BeaconClient, Client, DAppClient, WalletClient, P2PCommunicationClient };\n// Beacon\nexport { NetworkType, BeaconMessageType, PermissionScope, Origin, SigningType, \n// EncryptionType,\n// EncryptionOperation,\nExtensionMessageTarget };\n// Errors\nexport { BeaconError, BeaconErrorType, AbortedBeaconError, BroadcastBeaconError, NetworkNotSupportedBeaconError, NoAddressBeaconError, NoPrivateKeyBeaconError, NotGrantedBeaconError, ParametersInvalidBeaconError, TooManyOperationsBeaconError, TransactionInvalidBeaconError, SignatureTypeNotSupportedBeaconError, \n// EncryptionTypeNotSupportedBeaconError,\nUnknownBeaconError };\n// Transport\nexport { TransportStatus, TransportType, Transport, PostMessageTransport, P2PTransport, WalletP2PTransport, WalletPostMessageTransport, DappP2PTransport, DappPostMessageTransport, MessageBasedClient, Pairing };\n// Events\nexport { BeaconEvent, BeaconEventHandler, defaultEventCallbacks };\n// Storage\nexport { Storage, StorageKey, ChromeStorage, LocalStorage, getStorage };\n// Managers\nexport { PeerManager, AccountManager, AppMetadataManager, PermissionManager };\n// Constants\nexport { SDK_VERSION, BEACON_VERSION };\n// Utils\nexport { getSenderId, getAccountIdentifier, getAddressFromPublicKey };\n// BlockExplorer\nexport { BlockExplorer, TezblockBlockExplorer };\n// Others\nexport { Serializer, availableTransports, ColorMode };\n// Debug\nexport { setDebugEnabled, getDebugEnabled };\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}