{"ast":null,"code":"const cbs = [_ => undefined];\n/**\n * A mock for postmessage if run in node.js environment\n */\n\nlet windowRef = {\n  postMessage: (message, _target) => {\n    console.log('GOT MOCK POST MESSAGE', message);\n    cbs.forEach(callbackElement => {\n      callbackElement({\n        data: message\n      });\n    });\n  },\n  addEventListener: (_name, eventCallback) => {\n    cbs.push(eventCallback);\n  },\n  removeEventListener: (_name, eventCallback) => {\n    cbs.splice(cbs.indexOf(element => element === eventCallback), 1);\n  },\n  location: {\n    origin: '*'\n  }\n};\n\ntry {\n  if (typeof window !== 'undefined') {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    windowRef = window;\n  }\n} catch (windowError) {\n  console.log(`not defined: ${windowError}`);\n}\n\nconst clearMockWindowState = () => {\n  cbs.length = 0;\n};\n\nexport { windowRef, clearMockWindowState };","map":{"version":3,"sources":["../../src/MockWindow.ts"],"names":[],"mappings":"AAEA,MAAM,GAAG,GAAe,CAAE,CAAD,IAAsB,SAAvB,CAAxB;AAEA;;AAEG;;AACH,IAAI,SAAS,GAAG;AACd,EAAA,WAAW,EAAE,CAAC,OAAD,EAA4C,OAA5C,KAAsE;AACjF,IAAA,OAAO,CAAC,GAAR,CAAY,uBAAZ,EAAqC,OAArC;AACA,IAAA,GAAG,CAAC,OAAJ,CAAa,eAAD,IAA8B;AACxC,MAAA,eAAe,CAAC;AAAE,QAAA,IAAI,EAAE;AAAR,OAAD,CAAf;AACD,KAFD;AAGD,GANa;AAOd,EAAA,gBAAgB,EAAE,CAAC,KAAD,EAAgB,aAAhB,KAAiD;AACjE,IAAA,GAAG,CAAC,IAAJ,CAAS,aAAT;AACD,GATa;AAUd,EAAA,mBAAmB,EAAE,CAAC,KAAD,EAAgB,aAAhB,KAAiD;AACpE,IAAA,GAAG,CAAC,MAAJ,CACE,GAAG,CAAC,OAAJ,CAAa,OAAD,IAAa,OAAO,KAAK,aAArC,CADF,EAEE,CAFF;AAID,GAfa;AAgBd,EAAA,QAAQ,EAAE;AACR,IAAA,MAAM,EAAE;AADA;AAhBI,CAAhB;;AAqBA,IAAI;AACF,MAAI,OAAO,MAAP,KAAkB,WAAtB,EAAmC;AACjC;AACA,IAAA,SAAS,GAAG,MAAZ;AACD;AACF,CALD,CAKE,OAAO,WAAP,EAAoB;AACpB,EAAA,OAAO,CAAC,GAAR,CAAY,gBAAgB,WAAW,EAAvC;AACD;;AAED,MAAM,oBAAoB,GAAe,MAAW;AAClD,EAAA,GAAG,CAAC,MAAJ,GAAa,CAAb;AACD,CAFD;;AAIA,SAAS,SAAT,EAAoB,oBAApB","sourceRoot":"","sourcesContent":["const cbs = [(_) => undefined];\n/**\n * A mock for postmessage if run in node.js environment\n */\nlet windowRef = {\n    postMessage: (message, _target) => {\n        console.log('GOT MOCK POST MESSAGE', message);\n        cbs.forEach((callbackElement) => {\n            callbackElement({ data: message });\n        });\n    },\n    addEventListener: (_name, eventCallback) => {\n        cbs.push(eventCallback);\n    },\n    removeEventListener: (_name, eventCallback) => {\n        cbs.splice(cbs.indexOf((element) => element === eventCallback), 1);\n    },\n    location: {\n        origin: '*'\n    }\n};\ntry {\n    if (typeof window !== 'undefined') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        windowRef = window;\n    }\n}\ncatch (windowError) {\n    console.log(`not defined: ${windowError}`);\n}\nconst clearMockWindowState = () => {\n    cbs.length = 0;\n};\nexport { windowRef, clearMockWindowState };\n//# sourceMappingURL=MockWindow.js.map"]},"metadata":{},"sourceType":"module"}