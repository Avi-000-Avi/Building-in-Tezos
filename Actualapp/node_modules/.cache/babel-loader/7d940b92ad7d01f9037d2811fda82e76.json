{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { openAlert, closeAlerts } from './ui/alert/Alert';\nimport { closeToast, openToast } from './ui/toast/Toast';\nimport { Logger } from './utils/Logger';\nimport { shortenString } from './utils/shorten-string';\nimport { BeaconErrorType } from './types/BeaconErrorType';\nimport { UnknownBeaconError, BeaconError } from '.';\nimport { isMobile } from './utils/platform';\nconst logger = new Logger('BeaconEvents');\nconst SUCCESS_TIMER = 5 * 1000;\nconst SVG_EXTERNAL = `<svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"external-link-alt\" class=\"svg-inline--fa fa-external-link-alt fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z\"></path></svg>`;\n/**\n * The different events that can be emitted by the beacon-sdk\n */\n\nexport var BeaconEvent;\n\n(function (BeaconEvent) {\n  BeaconEvent[\"PERMISSION_REQUEST_SENT\"] = \"PERMISSION_REQUEST_SENT\";\n  BeaconEvent[\"PERMISSION_REQUEST_SUCCESS\"] = \"PERMISSION_REQUEST_SUCCESS\";\n  BeaconEvent[\"PERMISSION_REQUEST_ERROR\"] = \"PERMISSION_REQUEST_ERROR\";\n  BeaconEvent[\"OPERATION_REQUEST_SENT\"] = \"OPERATION_REQUEST_SENT\";\n  BeaconEvent[\"OPERATION_REQUEST_SUCCESS\"] = \"OPERATION_REQUEST_SUCCESS\";\n  BeaconEvent[\"OPERATION_REQUEST_ERROR\"] = \"OPERATION_REQUEST_ERROR\";\n  BeaconEvent[\"SIGN_REQUEST_SENT\"] = \"SIGN_REQUEST_SENT\";\n  BeaconEvent[\"SIGN_REQUEST_SUCCESS\"] = \"SIGN_REQUEST_SUCCESS\";\n  BeaconEvent[\"SIGN_REQUEST_ERROR\"] = \"SIGN_REQUEST_ERROR\"; // TODO: ENCRYPTION\n  // ENCRYPT_REQUEST_SENT = 'ENCRYPT_REQUEST_SENT',\n  // ENCRYPT_REQUEST_SUCCESS = 'ENCRYPT_REQUEST_SUCCESS',\n  // ENCRYPT_REQUEST_ERROR = 'ENCRYPT_REQUEST_ERROR',\n\n  BeaconEvent[\"BROADCAST_REQUEST_SENT\"] = \"BROADCAST_REQUEST_SENT\";\n  BeaconEvent[\"BROADCAST_REQUEST_SUCCESS\"] = \"BROADCAST_REQUEST_SUCCESS\";\n  BeaconEvent[\"BROADCAST_REQUEST_ERROR\"] = \"BROADCAST_REQUEST_ERROR\";\n  BeaconEvent[\"ACKNOWLEDGE_RECEIVED\"] = \"ACKNOWLEDGE_RECEIVED\";\n  BeaconEvent[\"LOCAL_RATE_LIMIT_REACHED\"] = \"LOCAL_RATE_LIMIT_REACHED\";\n  BeaconEvent[\"NO_PERMISSIONS\"] = \"NO_PERMISSIONS\";\n  BeaconEvent[\"ACTIVE_ACCOUNT_SET\"] = \"ACTIVE_ACCOUNT_SET\";\n  BeaconEvent[\"ACTIVE_TRANSPORT_SET\"] = \"ACTIVE_TRANSPORT_SET\";\n  BeaconEvent[\"SHOW_PREPARE\"] = \"SHOW_PREPARE\";\n  BeaconEvent[\"HIDE_UI\"] = \"HIDE_UI\";\n  BeaconEvent[\"PAIR_INIT\"] = \"PAIR_INIT\";\n  BeaconEvent[\"PAIR_SUCCESS\"] = \"PAIR_SUCCESS\";\n  BeaconEvent[\"CHANNEL_CLOSED\"] = \"CHANNEL_CLOSED\";\n  BeaconEvent[\"INTERNAL_ERROR\"] = \"INTERNAL_ERROR\";\n  BeaconEvent[\"UNKNOWN\"] = \"UNKNOWN\";\n})(BeaconEvent || (BeaconEvent = {}));\n/**\n * Show a \"Request sent\" toast\n */\n\n\nconst showSentToast = data => __awaiter(void 0, void 0, void 0, function* () {\n  let openWalletAction;\n  const actions = [];\n\n  if (data.walletInfo.deeplink) {\n    if (data.walletInfo.type === 'web' || data.walletInfo.type === 'mobile' && isMobile(window) || data.walletInfo.type === 'desktop' && !isMobile(window)) {\n      const link = data.walletInfo.deeplink;\n\n      openWalletAction = () => __awaiter(void 0, void 0, void 0, function* () {\n        const a = document.createElement('a');\n        a.setAttribute('href', link);\n        a.setAttribute('target', '_blank');\n        a.dispatchEvent(new MouseEvent('click', {\n          view: window,\n          bubbles: true,\n          cancelable: true\n        }));\n      });\n    }\n  }\n\n  actions.push({\n    text: `<strong>No answer from your wallet received yet. Please make sure the wallet is open.</strong>`\n  });\n  actions.push({\n    text: 'Did you make a mistake?',\n    actionText: 'Cancel Request',\n    actionCallback: () => __awaiter(void 0, void 0, void 0, function* () {\n      yield closeToast();\n    })\n  });\n  actions.push({\n    text: 'Wallet not receiving request?',\n    actionText: 'Reset Connection',\n    actionCallback: () => __awaiter(void 0, void 0, void 0, function* () {\n      yield closeToast(); // eslint-disable-next-line @typescript-eslint/unbound-method\n\n      const resetCallback = data.extraInfo.resetCallback;\n\n      if (resetCallback) {\n        logger.log('showSentToast', 'resetCallback invoked');\n        yield resetCallback();\n      }\n    })\n  });\n  openToast({\n    body: `<span class=\"beacon-toast__wallet__outer\">Request sent to&nbsp;{{wallet}}<span>`,\n    walletInfo: data.walletInfo,\n    state: 'loading',\n    actions,\n    openWalletAction\n  }).catch(toastError => console.error(toastError));\n});\n\nconst showAcknowledgedToast = data => __awaiter(void 0, void 0, void 0, function* () {\n  openToast({\n    body: '<span class=\"beacon-toast__wallet__outer\">Awaiting confirmation in&nbsp;{{wallet}}<span>',\n    state: 'acknowledge',\n    walletInfo: data.walletInfo\n  }).catch(toastError => console.error(toastError));\n});\n\nconst showPrepare = data => __awaiter(void 0, void 0, void 0, function* () {\n  const text = data.walletInfo ? `Preparing Request for {{wallet}}...` : 'Preparing Request...';\n  openToast({\n    body: `<span class=\"beacon-toast__wallet__outer\">${text}<span>`,\n    state: 'prepare',\n    walletInfo: data.walletInfo\n  }).catch(toastError => console.error(toastError));\n});\n\nconst hideUI = () => __awaiter(void 0, void 0, void 0, function* () {\n  closeToast();\n  closeAlerts();\n});\n/**\n * Show a \"No Permission\" alert\n */\n\n\nconst showNoPermissionAlert = () => __awaiter(void 0, void 0, void 0, function* () {\n  yield openAlert({\n    title: 'No Permission',\n    body: 'Please allow the wallet to handle this type of request.'\n  });\n});\n/**\n * Show an error toast\n *\n * @param beaconError The beacon error\n */\n\n\nconst showErrorToast = (response, buttons) => __awaiter(void 0, void 0, void 0, function* () {\n  const error = response.errorResponse.errorType ? BeaconError.getError(response.errorResponse.errorType, response.errorResponse.errorData) : new UnknownBeaconError();\n  const actions = [{\n    text: `<strong>${error.title}</strong>`\n  }, {\n    text: error.description\n  }];\n\n  if (response.errorResponse.errorType === BeaconErrorType.TRANSACTION_INVALID_ERROR && response.errorResponse.errorData) {\n    actions.push({\n      text: '',\n      actionText: 'Show Details',\n      actionCallback: () => __awaiter(void 0, void 0, void 0, function* () {\n        yield closeToast();\n        yield openAlert({\n          title: error.title,\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          body: error.fullDescription,\n          buttons\n        });\n      })\n    });\n  }\n\n  yield openToast({\n    body: `{{wallet}}&nbsp;has returned an error`,\n    timer: response.errorResponse.errorType === BeaconErrorType.ABORTED_ERROR ? SUCCESS_TIMER : undefined,\n    state: 'finished',\n    walletInfo: response.walletInfo,\n    actions\n  });\n});\n/**\n * Show a rate limit reached toast\n */\n\n\nconst showRateLimitReached = () => __awaiter(void 0, void 0, void 0, function* () {\n  openAlert({\n    title: 'Error',\n    body: 'Rate limit reached. Please slow down',\n    buttons: [{\n      text: 'Done',\n      style: 'outline'\n    }],\n    timer: 3000\n  }).catch(toastError => console.error(toastError));\n});\n/**\n * Show a \"connection successful\" alert for 1.5 seconds\n */\n\n\nconst showExtensionConnectedAlert = () => __awaiter(void 0, void 0, void 0, function* () {\n  yield closeAlerts();\n});\n/**\n * Show a \"channel closed\" alert for 1.5 seconds\n */\n\n\nconst showChannelClosedAlert = () => __awaiter(void 0, void 0, void 0, function* () {\n  yield openAlert({\n    title: 'Channel closed',\n    body: `Your peer has closed the connection.`,\n    buttons: [{\n      text: 'Done',\n      style: 'outline'\n    }],\n    timer: 1500\n  });\n});\n\nconst showInternalErrorAlert = data => __awaiter(void 0, void 0, void 0, function* () {\n  const alertConfig = {\n    title: 'Internal Error',\n    body: `${data}`,\n    buttons: [{\n      text: 'Done',\n      style: 'outline'\n    }]\n  };\n  yield openAlert(alertConfig);\n});\n/**\n * Show a connect alert with QR code\n *\n * @param data The data that is emitted by the PAIR_INIT event\n */\n\n\nconst showPairAlert = data => __awaiter(void 0, void 0, void 0, function* () {\n  const alertConfig = {\n    title: 'Choose your preferred wallet',\n    body: `<p></p>`,\n    pairingPayload: {\n      p2pSyncCode: data.p2pPeerInfo,\n      postmessageSyncCode: data.postmessagePeerInfo,\n      preferredNetwork: data.preferredNetwork\n    },\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    closeButtonCallback: data.abortedHandler,\n    disclaimerText: data.disclaimerText\n  };\n  yield openAlert(alertConfig);\n});\n/**\n * Show a \"Permission Granted\" alert\n *\n * @param data The data that is emitted by the PERMISSION_REQUEST_SUCCESS event\n */\n\n\nconst showPermissionSuccessAlert = data => __awaiter(void 0, void 0, void 0, function* () {\n  const {\n    output\n  } = data;\n  yield openToast({\n    body: `{{wallet}}&nbsp;has granted permission`,\n    timer: SUCCESS_TIMER,\n    walletInfo: data.walletInfo,\n    state: 'finished',\n    actions: [{\n      text: 'Address',\n      actionText: `<strong>${shortenString(output.address)}</strong>`\n    }, {\n      text: 'Network',\n      actionText: `${output.network.type}`\n    }, {\n      text: 'Permissions',\n      actionText: output.scopes.join(', ')\n    }]\n  });\n});\n/**\n * Show an \"Operation Broadcasted\" alert\n *\n * @param data The data that is emitted by the OPERATION_REQUEST_SUCCESS event\n */\n\n\nconst showOperationSuccessAlert = data => __awaiter(void 0, void 0, void 0, function* () {\n  const {\n    account,\n    output,\n    blockExplorer\n  } = data;\n  yield openToast({\n    body: `{{wallet}}&nbsp;successfully submitted operation`,\n    timer: SUCCESS_TIMER,\n    state: 'finished',\n    walletInfo: data.walletInfo,\n    actions: [{\n      text: `<strong>${shortenString(output.transactionHash)}</strong>`,\n      actionText: `Open Blockexplorer ${SVG_EXTERNAL}`,\n      actionCallback: () => __awaiter(void 0, void 0, void 0, function* () {\n        const link = yield blockExplorer.getTransactionLink(output.transactionHash, account.network);\n        window.open(link, '_blank');\n        yield closeToast();\n      })\n    }]\n  });\n});\n/**\n * Show a \"Transaction Signed\" alert\n *\n * @param data The data that is emitted by the SIGN_REQUEST_SUCCESS event\n */\n\n\nconst showSignSuccessAlert = data => __awaiter(void 0, void 0, void 0, function* () {\n  const output = data.output;\n  yield openToast({\n    body: `{{wallet}}&nbsp;successfully signed payload`,\n    timer: SUCCESS_TIMER,\n    state: 'finished',\n    walletInfo: data.walletInfo,\n    actions: [{\n      text: `Signature: <strong>${shortenString(output.signature)}</strong>`,\n      actionText: 'Copy to clipboard',\n      actionCallback: () => __awaiter(void 0, void 0, void 0, function* () {\n        navigator.clipboard.writeText(output.signature).then(() => {\n          logger.log('showSignSuccessAlert', 'Copying to clipboard was successful!');\n        }, err => {\n          logger.error('showSignSuccessAlert', 'Could not copy text to clipboard: ', err);\n        });\n        yield closeToast();\n      })\n    }]\n  });\n});\n/**\n * Show a \"Transaction Signed\" alert\n *\n * @param data The data that is emitted by the ENCRYPT_REQUEST_SUCCESS event\n */\n// TODO: ENCRYPTION\n// const showEncryptSuccessAlert = async (\n//   data: BeaconEventType[BeaconEvent.ENCRYPT_REQUEST_SUCCESS]\n// ): Promise<void> => {\n//   const output = data.output\n//   await openToast({\n//     body: `{{wallet}}&nbsp;successfully ${\n//       data.output.cryptoOperation === EncryptionOperation.ENCRYPT ? 'encrypted' : 'decrypted'\n//     } payload`,\n//     timer: SUCCESS_TIMER,\n//     state: 'finished',\n//     walletInfo: data.walletInfo,\n//     actions: [\n//       {\n//         text: `Payload: <strong>${shortenString(output.payload)}</strong>`,\n//         actionText: 'Copy to clipboard',\n//         actionCallback: async (): Promise<void> => {\n//           navigator.clipboard.writeText(output.payload).then(\n//             () => {\n//               logger.log('showSignSuccessAlert', 'Copying to clipboard was successful!')\n//             },\n//             (err) => {\n//               logger.error('showSignSuccessAlert', 'Could not copy text to clipboard: ', err)\n//             }\n//           )\n//           await closeToast()\n//         }\n//       }\n//     ]\n//   })\n// }\n\n/**\n * Show a \"Broadcasted\" alert\n *\n * @param data The data that is emitted by the BROADCAST_REQUEST_SUCCESS event\n */\n\n\nconst showBroadcastSuccessAlert = data => __awaiter(void 0, void 0, void 0, function* () {\n  const {\n    network,\n    output,\n    blockExplorer\n  } = data;\n  yield openToast({\n    body: `{{wallet}}&nbsp;successfully injected operation`,\n    timer: SUCCESS_TIMER,\n    state: 'finished',\n    walletInfo: data.walletInfo,\n    actions: [{\n      text: `<strong>${shortenString(output.transactionHash)}</strong>`,\n      actionText: `Open Blockexplorer ${SVG_EXTERNAL}`,\n      actionCallback: () => __awaiter(void 0, void 0, void 0, function* () {\n        const link = yield blockExplorer.getTransactionLink(output.transactionHash, network);\n        window.open(link, '_blank');\n        yield closeToast();\n      })\n    }]\n  });\n});\n\nconst emptyHandler = () => () => __awaiter(void 0, void 0, void 0, function* () {//\n});\n/**\n * The default event handlers\n */\n\n\nexport const defaultEventCallbacks = {\n  [BeaconEvent.PERMISSION_REQUEST_SENT]: showSentToast,\n  [BeaconEvent.PERMISSION_REQUEST_SUCCESS]: showPermissionSuccessAlert,\n  [BeaconEvent.PERMISSION_REQUEST_ERROR]: showErrorToast,\n  [BeaconEvent.OPERATION_REQUEST_SENT]: showSentToast,\n  [BeaconEvent.OPERATION_REQUEST_SUCCESS]: showOperationSuccessAlert,\n  [BeaconEvent.OPERATION_REQUEST_ERROR]: showErrorToast,\n  [BeaconEvent.SIGN_REQUEST_SENT]: showSentToast,\n  [BeaconEvent.SIGN_REQUEST_SUCCESS]: showSignSuccessAlert,\n  [BeaconEvent.SIGN_REQUEST_ERROR]: showErrorToast,\n  // TODO: ENCRYPTION\n  // [BeaconEvent.ENCRYPT_REQUEST_SENT]: showSentToast,\n  // [BeaconEvent.ENCRYPT_REQUEST_SUCCESS]: showEncryptSuccessAlert,\n  // [BeaconEvent.ENCRYPT_REQUEST_ERROR]: showErrorToast,\n  [BeaconEvent.BROADCAST_REQUEST_SENT]: showSentToast,\n  [BeaconEvent.BROADCAST_REQUEST_SUCCESS]: showBroadcastSuccessAlert,\n  [BeaconEvent.BROADCAST_REQUEST_ERROR]: showErrorToast,\n  [BeaconEvent.ACKNOWLEDGE_RECEIVED]: showAcknowledgedToast,\n  [BeaconEvent.LOCAL_RATE_LIMIT_REACHED]: showRateLimitReached,\n  [BeaconEvent.NO_PERMISSIONS]: showNoPermissionAlert,\n  [BeaconEvent.ACTIVE_ACCOUNT_SET]: emptyHandler(),\n  [BeaconEvent.ACTIVE_TRANSPORT_SET]: emptyHandler(),\n  [BeaconEvent.SHOW_PREPARE]: showPrepare,\n  [BeaconEvent.HIDE_UI]: hideUI,\n  [BeaconEvent.PAIR_INIT]: showPairAlert,\n  [BeaconEvent.PAIR_SUCCESS]: showExtensionConnectedAlert,\n  [BeaconEvent.CHANNEL_CLOSED]: showChannelClosedAlert,\n  [BeaconEvent.INTERNAL_ERROR]: showInternalErrorAlert,\n  [BeaconEvent.UNKNOWN]: emptyHandler()\n};\n/**\n * @internalapi\n *\n * Handles beacon events\n */\n\nexport class BeaconEventHandler {\n  constructor(eventsToOverride = {}, overrideAll) {\n    this.callbackMap = {\n      [BeaconEvent.PERMISSION_REQUEST_SENT]: [defaultEventCallbacks.PERMISSION_REQUEST_SENT],\n      [BeaconEvent.PERMISSION_REQUEST_SUCCESS]: [defaultEventCallbacks.PERMISSION_REQUEST_SUCCESS],\n      [BeaconEvent.PERMISSION_REQUEST_ERROR]: [defaultEventCallbacks.PERMISSION_REQUEST_ERROR],\n      [BeaconEvent.OPERATION_REQUEST_SENT]: [defaultEventCallbacks.OPERATION_REQUEST_SENT],\n      [BeaconEvent.OPERATION_REQUEST_SUCCESS]: [defaultEventCallbacks.OPERATION_REQUEST_SUCCESS],\n      [BeaconEvent.OPERATION_REQUEST_ERROR]: [defaultEventCallbacks.OPERATION_REQUEST_ERROR],\n      [BeaconEvent.SIGN_REQUEST_SENT]: [defaultEventCallbacks.SIGN_REQUEST_SENT],\n      [BeaconEvent.SIGN_REQUEST_SUCCESS]: [defaultEventCallbacks.SIGN_REQUEST_SUCCESS],\n      [BeaconEvent.SIGN_REQUEST_ERROR]: [defaultEventCallbacks.SIGN_REQUEST_ERROR],\n      // TODO: ENCRYPTION\n      // [BeaconEvent.ENCRYPT_REQUEST_SENT]: [defaultEventCallbacks.ENCRYPT_REQUEST_SENT],\n      // [BeaconEvent.ENCRYPT_REQUEST_SUCCESS]: [defaultEventCallbacks.ENCRYPT_REQUEST_SUCCESS],\n      // [BeaconEvent.ENCRYPT_REQUEST_ERROR]: [defaultEventCallbacks.ENCRYPT_REQUEST_ERROR],\n      [BeaconEvent.BROADCAST_REQUEST_SENT]: [defaultEventCallbacks.BROADCAST_REQUEST_SENT],\n      [BeaconEvent.BROADCAST_REQUEST_SUCCESS]: [defaultEventCallbacks.BROADCAST_REQUEST_SUCCESS],\n      [BeaconEvent.BROADCAST_REQUEST_ERROR]: [defaultEventCallbacks.BROADCAST_REQUEST_ERROR],\n      [BeaconEvent.ACKNOWLEDGE_RECEIVED]: [defaultEventCallbacks.ACKNOWLEDGE_RECEIVED],\n      [BeaconEvent.LOCAL_RATE_LIMIT_REACHED]: [defaultEventCallbacks.LOCAL_RATE_LIMIT_REACHED],\n      [BeaconEvent.NO_PERMISSIONS]: [defaultEventCallbacks.NO_PERMISSIONS],\n      [BeaconEvent.ACTIVE_ACCOUNT_SET]: [defaultEventCallbacks.ACTIVE_ACCOUNT_SET],\n      [BeaconEvent.ACTIVE_TRANSPORT_SET]: [defaultEventCallbacks.ACTIVE_TRANSPORT_SET],\n      [BeaconEvent.SHOW_PREPARE]: [defaultEventCallbacks.SHOW_PREPARE],\n      [BeaconEvent.HIDE_UI]: [defaultEventCallbacks.HIDE_UI],\n      [BeaconEvent.PAIR_INIT]: [defaultEventCallbacks.PAIR_INIT],\n      [BeaconEvent.PAIR_SUCCESS]: [defaultEventCallbacks.PAIR_SUCCESS],\n      [BeaconEvent.CHANNEL_CLOSED]: [defaultEventCallbacks.CHANNEL_CLOSED],\n      [BeaconEvent.INTERNAL_ERROR]: [defaultEventCallbacks.INTERNAL_ERROR],\n      [BeaconEvent.UNKNOWN]: [defaultEventCallbacks.UNKNOWN]\n    };\n\n    if (overrideAll) {\n      this.setAllHandlers();\n    }\n\n    this.overrideDefaults(eventsToOverride);\n  }\n  /**\n   * A method to subscribe to a specific beacon event and register a callback\n   *\n   * @param event The event being emitted\n   * @param eventCallback The callback that will be invoked\n   */\n\n\n  on(event, eventCallback) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const listeners = this.callbackMap[event] || [];\n      listeners.push(eventCallback);\n      this.callbackMap[event] = listeners;\n    });\n  }\n  /**\n   * Emit a beacon event\n   *\n   * @param event The event being emitted\n   * @param data The data to be emit\n   */\n\n\n  emit(event, data, eventCallback) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const listeners = this.callbackMap[event];\n\n      if (listeners && listeners.length > 0) {\n        listeners.forEach(listener => __awaiter(this, void 0, void 0, function* () {\n          try {\n            yield listener(data, eventCallback);\n          } catch (listenerError) {\n            logger.error(`error handling event ${event}`, listenerError);\n          }\n        }));\n      }\n    });\n  }\n  /**\n   * Override beacon event default callbacks. This can be used to disable default alert/toast behaviour\n   *\n   * @param eventsToOverride An object with the events to override\n   */\n\n\n  overrideDefaults(eventsToOverride) {\n    Object.keys(eventsToOverride).forEach(untypedEvent => {\n      const eventType = untypedEvent;\n      const event = eventsToOverride[eventType];\n\n      if (event) {\n        this.callbackMap[eventType] = [event.handler];\n      }\n    });\n  }\n  /**\n   * Set all event callbacks to a specific handler.\n   */\n\n\n  setAllHandlers(handler) {\n    Object.keys(this.callbackMap).forEach(untypedEvent => {\n      const eventType = untypedEvent;\n      this.callbackMap[eventType] = [];\n\n      if (handler) {\n        this.callbackMap[eventType].push(handler);\n      } else {\n        this.callbackMap[eventType].push((...data) => {\n          logger.log(untypedEvent, ...data);\n        });\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["../../src/events.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { openAlert, closeAlerts } from './ui/alert/Alert';\nimport { closeToast, openToast } from './ui/toast/Toast';\nimport { Logger } from './utils/Logger';\nimport { shortenString } from './utils/shorten-string';\nimport { BeaconErrorType } from './types/BeaconErrorType';\nimport { UnknownBeaconError, BeaconError } from '.';\nimport { isMobile } from './utils/platform';\nconst logger = new Logger('BeaconEvents');\nconst SUCCESS_TIMER = 5 * 1000;\nconst SVG_EXTERNAL = `<svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"external-link-alt\" class=\"svg-inline--fa fa-external-link-alt fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z\"></path></svg>`;\n/**\n * The different events that can be emitted by the beacon-sdk\n */\nexport var BeaconEvent;\n(function (BeaconEvent) {\n    BeaconEvent[\"PERMISSION_REQUEST_SENT\"] = \"PERMISSION_REQUEST_SENT\";\n    BeaconEvent[\"PERMISSION_REQUEST_SUCCESS\"] = \"PERMISSION_REQUEST_SUCCESS\";\n    BeaconEvent[\"PERMISSION_REQUEST_ERROR\"] = \"PERMISSION_REQUEST_ERROR\";\n    BeaconEvent[\"OPERATION_REQUEST_SENT\"] = \"OPERATION_REQUEST_SENT\";\n    BeaconEvent[\"OPERATION_REQUEST_SUCCESS\"] = \"OPERATION_REQUEST_SUCCESS\";\n    BeaconEvent[\"OPERATION_REQUEST_ERROR\"] = \"OPERATION_REQUEST_ERROR\";\n    BeaconEvent[\"SIGN_REQUEST_SENT\"] = \"SIGN_REQUEST_SENT\";\n    BeaconEvent[\"SIGN_REQUEST_SUCCESS\"] = \"SIGN_REQUEST_SUCCESS\";\n    BeaconEvent[\"SIGN_REQUEST_ERROR\"] = \"SIGN_REQUEST_ERROR\";\n    // TODO: ENCRYPTION\n    // ENCRYPT_REQUEST_SENT = 'ENCRYPT_REQUEST_SENT',\n    // ENCRYPT_REQUEST_SUCCESS = 'ENCRYPT_REQUEST_SUCCESS',\n    // ENCRYPT_REQUEST_ERROR = 'ENCRYPT_REQUEST_ERROR',\n    BeaconEvent[\"BROADCAST_REQUEST_SENT\"] = \"BROADCAST_REQUEST_SENT\";\n    BeaconEvent[\"BROADCAST_REQUEST_SUCCESS\"] = \"BROADCAST_REQUEST_SUCCESS\";\n    BeaconEvent[\"BROADCAST_REQUEST_ERROR\"] = \"BROADCAST_REQUEST_ERROR\";\n    BeaconEvent[\"ACKNOWLEDGE_RECEIVED\"] = \"ACKNOWLEDGE_RECEIVED\";\n    BeaconEvent[\"LOCAL_RATE_LIMIT_REACHED\"] = \"LOCAL_RATE_LIMIT_REACHED\";\n    BeaconEvent[\"NO_PERMISSIONS\"] = \"NO_PERMISSIONS\";\n    BeaconEvent[\"ACTIVE_ACCOUNT_SET\"] = \"ACTIVE_ACCOUNT_SET\";\n    BeaconEvent[\"ACTIVE_TRANSPORT_SET\"] = \"ACTIVE_TRANSPORT_SET\";\n    BeaconEvent[\"SHOW_PREPARE\"] = \"SHOW_PREPARE\";\n    BeaconEvent[\"HIDE_UI\"] = \"HIDE_UI\";\n    BeaconEvent[\"PAIR_INIT\"] = \"PAIR_INIT\";\n    BeaconEvent[\"PAIR_SUCCESS\"] = \"PAIR_SUCCESS\";\n    BeaconEvent[\"CHANNEL_CLOSED\"] = \"CHANNEL_CLOSED\";\n    BeaconEvent[\"INTERNAL_ERROR\"] = \"INTERNAL_ERROR\";\n    BeaconEvent[\"UNKNOWN\"] = \"UNKNOWN\";\n})(BeaconEvent || (BeaconEvent = {}));\n/**\n * Show a \"Request sent\" toast\n */\nconst showSentToast = (data) => __awaiter(void 0, void 0, void 0, function* () {\n    let openWalletAction;\n    const actions = [];\n    if (data.walletInfo.deeplink) {\n        if (data.walletInfo.type === 'web' ||\n            (data.walletInfo.type === 'mobile' && isMobile(window)) ||\n            (data.walletInfo.type === 'desktop' && !isMobile(window))) {\n            const link = data.walletInfo.deeplink;\n            openWalletAction = () => __awaiter(void 0, void 0, void 0, function* () {\n                const a = document.createElement('a');\n                a.setAttribute('href', link);\n                a.setAttribute('target', '_blank');\n                a.dispatchEvent(new MouseEvent('click', { view: window, bubbles: true, cancelable: true }));\n            });\n        }\n    }\n    actions.push({\n        text: `<strong>No answer from your wallet received yet. Please make sure the wallet is open.</strong>`\n    });\n    actions.push({\n        text: 'Did you make a mistake?',\n        actionText: 'Cancel Request',\n        actionCallback: () => __awaiter(void 0, void 0, void 0, function* () {\n            yield closeToast();\n        })\n    });\n    actions.push({\n        text: 'Wallet not receiving request?',\n        actionText: 'Reset Connection',\n        actionCallback: () => __awaiter(void 0, void 0, void 0, function* () {\n            yield closeToast();\n            // eslint-disable-next-line @typescript-eslint/unbound-method\n            const resetCallback = data.extraInfo.resetCallback;\n            if (resetCallback) {\n                logger.log('showSentToast', 'resetCallback invoked');\n                yield resetCallback();\n            }\n        })\n    });\n    openToast({\n        body: `<span class=\"beacon-toast__wallet__outer\">Request sent to&nbsp;{{wallet}}<span>`,\n        walletInfo: data.walletInfo,\n        state: 'loading',\n        actions,\n        openWalletAction\n    }).catch((toastError) => console.error(toastError));\n});\nconst showAcknowledgedToast = (data) => __awaiter(void 0, void 0, void 0, function* () {\n    openToast({\n        body: '<span class=\"beacon-toast__wallet__outer\">Awaiting confirmation in&nbsp;{{wallet}}<span>',\n        state: 'acknowledge',\n        walletInfo: data.walletInfo\n    }).catch((toastError) => console.error(toastError));\n});\nconst showPrepare = (data) => __awaiter(void 0, void 0, void 0, function* () {\n    const text = data.walletInfo ? `Preparing Request for {{wallet}}...` : 'Preparing Request...';\n    openToast({\n        body: `<span class=\"beacon-toast__wallet__outer\">${text}<span>`,\n        state: 'prepare',\n        walletInfo: data.walletInfo\n    }).catch((toastError) => console.error(toastError));\n});\nconst hideUI = () => __awaiter(void 0, void 0, void 0, function* () {\n    closeToast();\n    closeAlerts();\n});\n/**\n * Show a \"No Permission\" alert\n */\nconst showNoPermissionAlert = () => __awaiter(void 0, void 0, void 0, function* () {\n    yield openAlert({\n        title: 'No Permission',\n        body: 'Please allow the wallet to handle this type of request.'\n    });\n});\n/**\n * Show an error toast\n *\n * @param beaconError The beacon error\n */\nconst showErrorToast = (response, buttons) => __awaiter(void 0, void 0, void 0, function* () {\n    const error = response.errorResponse.errorType\n        ? BeaconError.getError(response.errorResponse.errorType, response.errorResponse.errorData)\n        : new UnknownBeaconError();\n    const actions = [\n        {\n            text: `<strong>${error.title}</strong>`\n        },\n        {\n            text: error.description\n        }\n    ];\n    if (response.errorResponse.errorType === BeaconErrorType.TRANSACTION_INVALID_ERROR &&\n        response.errorResponse.errorData) {\n        actions.push({\n            text: '',\n            actionText: 'Show Details',\n            actionCallback: () => __awaiter(void 0, void 0, void 0, function* () {\n                yield closeToast();\n                yield openAlert({\n                    title: error.title,\n                    // eslint-disable-next-line @typescript-eslint/unbound-method\n                    body: error.fullDescription,\n                    buttons\n                });\n            })\n        });\n    }\n    yield openToast({\n        body: `{{wallet}}&nbsp;has returned an error`,\n        timer: response.errorResponse.errorType === BeaconErrorType.ABORTED_ERROR\n            ? SUCCESS_TIMER\n            : undefined,\n        state: 'finished',\n        walletInfo: response.walletInfo,\n        actions\n    });\n});\n/**\n * Show a rate limit reached toast\n */\nconst showRateLimitReached = () => __awaiter(void 0, void 0, void 0, function* () {\n    openAlert({\n        title: 'Error',\n        body: 'Rate limit reached. Please slow down',\n        buttons: [{ text: 'Done', style: 'outline' }],\n        timer: 3000\n    }).catch((toastError) => console.error(toastError));\n});\n/**\n * Show a \"connection successful\" alert for 1.5 seconds\n */\nconst showExtensionConnectedAlert = () => __awaiter(void 0, void 0, void 0, function* () {\n    yield closeAlerts();\n});\n/**\n * Show a \"channel closed\" alert for 1.5 seconds\n */\nconst showChannelClosedAlert = () => __awaiter(void 0, void 0, void 0, function* () {\n    yield openAlert({\n        title: 'Channel closed',\n        body: `Your peer has closed the connection.`,\n        buttons: [{ text: 'Done', style: 'outline' }],\n        timer: 1500\n    });\n});\nconst showInternalErrorAlert = (data) => __awaiter(void 0, void 0, void 0, function* () {\n    const alertConfig = {\n        title: 'Internal Error',\n        body: `${data}`,\n        buttons: [{ text: 'Done', style: 'outline' }]\n    };\n    yield openAlert(alertConfig);\n});\n/**\n * Show a connect alert with QR code\n *\n * @param data The data that is emitted by the PAIR_INIT event\n */\nconst showPairAlert = (data) => __awaiter(void 0, void 0, void 0, function* () {\n    const alertConfig = {\n        title: 'Choose your preferred wallet',\n        body: `<p></p>`,\n        pairingPayload: {\n            p2pSyncCode: data.p2pPeerInfo,\n            postmessageSyncCode: data.postmessagePeerInfo,\n            preferredNetwork: data.preferredNetwork\n        },\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        closeButtonCallback: data.abortedHandler,\n        disclaimerText: data.disclaimerText\n    };\n    yield openAlert(alertConfig);\n});\n/**\n * Show a \"Permission Granted\" alert\n *\n * @param data The data that is emitted by the PERMISSION_REQUEST_SUCCESS event\n */\nconst showPermissionSuccessAlert = (data) => __awaiter(void 0, void 0, void 0, function* () {\n    const { output } = data;\n    yield openToast({\n        body: `{{wallet}}&nbsp;has granted permission`,\n        timer: SUCCESS_TIMER,\n        walletInfo: data.walletInfo,\n        state: 'finished',\n        actions: [\n            {\n                text: 'Address',\n                actionText: `<strong>${shortenString(output.address)}</strong>`\n            },\n            {\n                text: 'Network',\n                actionText: `${output.network.type}`\n            },\n            {\n                text: 'Permissions',\n                actionText: output.scopes.join(', ')\n            }\n        ]\n    });\n});\n/**\n * Show an \"Operation Broadcasted\" alert\n *\n * @param data The data that is emitted by the OPERATION_REQUEST_SUCCESS event\n */\nconst showOperationSuccessAlert = (data) => __awaiter(void 0, void 0, void 0, function* () {\n    const { account, output, blockExplorer } = data;\n    yield openToast({\n        body: `{{wallet}}&nbsp;successfully submitted operation`,\n        timer: SUCCESS_TIMER,\n        state: 'finished',\n        walletInfo: data.walletInfo,\n        actions: [\n            {\n                text: `<strong>${shortenString(output.transactionHash)}</strong>`,\n                actionText: `Open Blockexplorer ${SVG_EXTERNAL}`,\n                actionCallback: () => __awaiter(void 0, void 0, void 0, function* () {\n                    const link = yield blockExplorer.getTransactionLink(output.transactionHash, account.network);\n                    window.open(link, '_blank');\n                    yield closeToast();\n                })\n            }\n        ]\n    });\n});\n/**\n * Show a \"Transaction Signed\" alert\n *\n * @param data The data that is emitted by the SIGN_REQUEST_SUCCESS event\n */\nconst showSignSuccessAlert = (data) => __awaiter(void 0, void 0, void 0, function* () {\n    const output = data.output;\n    yield openToast({\n        body: `{{wallet}}&nbsp;successfully signed payload`,\n        timer: SUCCESS_TIMER,\n        state: 'finished',\n        walletInfo: data.walletInfo,\n        actions: [\n            {\n                text: `Signature: <strong>${shortenString(output.signature)}</strong>`,\n                actionText: 'Copy to clipboard',\n                actionCallback: () => __awaiter(void 0, void 0, void 0, function* () {\n                    navigator.clipboard.writeText(output.signature).then(() => {\n                        logger.log('showSignSuccessAlert', 'Copying to clipboard was successful!');\n                    }, (err) => {\n                        logger.error('showSignSuccessAlert', 'Could not copy text to clipboard: ', err);\n                    });\n                    yield closeToast();\n                })\n            }\n        ]\n    });\n});\n/**\n * Show a \"Transaction Signed\" alert\n *\n * @param data The data that is emitted by the ENCRYPT_REQUEST_SUCCESS event\n */\n// TODO: ENCRYPTION\n// const showEncryptSuccessAlert = async (\n//   data: BeaconEventType[BeaconEvent.ENCRYPT_REQUEST_SUCCESS]\n// ): Promise<void> => {\n//   const output = data.output\n//   await openToast({\n//     body: `{{wallet}}&nbsp;successfully ${\n//       data.output.cryptoOperation === EncryptionOperation.ENCRYPT ? 'encrypted' : 'decrypted'\n//     } payload`,\n//     timer: SUCCESS_TIMER,\n//     state: 'finished',\n//     walletInfo: data.walletInfo,\n//     actions: [\n//       {\n//         text: `Payload: <strong>${shortenString(output.payload)}</strong>`,\n//         actionText: 'Copy to clipboard',\n//         actionCallback: async (): Promise<void> => {\n//           navigator.clipboard.writeText(output.payload).then(\n//             () => {\n//               logger.log('showSignSuccessAlert', 'Copying to clipboard was successful!')\n//             },\n//             (err) => {\n//               logger.error('showSignSuccessAlert', 'Could not copy text to clipboard: ', err)\n//             }\n//           )\n//           await closeToast()\n//         }\n//       }\n//     ]\n//   })\n// }\n/**\n * Show a \"Broadcasted\" alert\n *\n * @param data The data that is emitted by the BROADCAST_REQUEST_SUCCESS event\n */\nconst showBroadcastSuccessAlert = (data) => __awaiter(void 0, void 0, void 0, function* () {\n    const { network, output, blockExplorer } = data;\n    yield openToast({\n        body: `{{wallet}}&nbsp;successfully injected operation`,\n        timer: SUCCESS_TIMER,\n        state: 'finished',\n        walletInfo: data.walletInfo,\n        actions: [\n            {\n                text: `<strong>${shortenString(output.transactionHash)}</strong>`,\n                actionText: `Open Blockexplorer ${SVG_EXTERNAL}`,\n                actionCallback: () => __awaiter(void 0, void 0, void 0, function* () {\n                    const link = yield blockExplorer.getTransactionLink(output.transactionHash, network);\n                    window.open(link, '_blank');\n                    yield closeToast();\n                })\n            }\n        ]\n    });\n});\nconst emptyHandler = () => () => __awaiter(void 0, void 0, void 0, function* () {\n    //\n});\n/**\n * The default event handlers\n */\nexport const defaultEventCallbacks = {\n    [BeaconEvent.PERMISSION_REQUEST_SENT]: showSentToast,\n    [BeaconEvent.PERMISSION_REQUEST_SUCCESS]: showPermissionSuccessAlert,\n    [BeaconEvent.PERMISSION_REQUEST_ERROR]: showErrorToast,\n    [BeaconEvent.OPERATION_REQUEST_SENT]: showSentToast,\n    [BeaconEvent.OPERATION_REQUEST_SUCCESS]: showOperationSuccessAlert,\n    [BeaconEvent.OPERATION_REQUEST_ERROR]: showErrorToast,\n    [BeaconEvent.SIGN_REQUEST_SENT]: showSentToast,\n    [BeaconEvent.SIGN_REQUEST_SUCCESS]: showSignSuccessAlert,\n    [BeaconEvent.SIGN_REQUEST_ERROR]: showErrorToast,\n    // TODO: ENCRYPTION\n    // [BeaconEvent.ENCRYPT_REQUEST_SENT]: showSentToast,\n    // [BeaconEvent.ENCRYPT_REQUEST_SUCCESS]: showEncryptSuccessAlert,\n    // [BeaconEvent.ENCRYPT_REQUEST_ERROR]: showErrorToast,\n    [BeaconEvent.BROADCAST_REQUEST_SENT]: showSentToast,\n    [BeaconEvent.BROADCAST_REQUEST_SUCCESS]: showBroadcastSuccessAlert,\n    [BeaconEvent.BROADCAST_REQUEST_ERROR]: showErrorToast,\n    [BeaconEvent.ACKNOWLEDGE_RECEIVED]: showAcknowledgedToast,\n    [BeaconEvent.LOCAL_RATE_LIMIT_REACHED]: showRateLimitReached,\n    [BeaconEvent.NO_PERMISSIONS]: showNoPermissionAlert,\n    [BeaconEvent.ACTIVE_ACCOUNT_SET]: emptyHandler(),\n    [BeaconEvent.ACTIVE_TRANSPORT_SET]: emptyHandler(),\n    [BeaconEvent.SHOW_PREPARE]: showPrepare,\n    [BeaconEvent.HIDE_UI]: hideUI,\n    [BeaconEvent.PAIR_INIT]: showPairAlert,\n    [BeaconEvent.PAIR_SUCCESS]: showExtensionConnectedAlert,\n    [BeaconEvent.CHANNEL_CLOSED]: showChannelClosedAlert,\n    [BeaconEvent.INTERNAL_ERROR]: showInternalErrorAlert,\n    [BeaconEvent.UNKNOWN]: emptyHandler()\n};\n/**\n * @internalapi\n *\n * Handles beacon events\n */\nexport class BeaconEventHandler {\n    constructor(eventsToOverride = {}, overrideAll) {\n        this.callbackMap = {\n            [BeaconEvent.PERMISSION_REQUEST_SENT]: [defaultEventCallbacks.PERMISSION_REQUEST_SENT],\n            [BeaconEvent.PERMISSION_REQUEST_SUCCESS]: [defaultEventCallbacks.PERMISSION_REQUEST_SUCCESS],\n            [BeaconEvent.PERMISSION_REQUEST_ERROR]: [defaultEventCallbacks.PERMISSION_REQUEST_ERROR],\n            [BeaconEvent.OPERATION_REQUEST_SENT]: [defaultEventCallbacks.OPERATION_REQUEST_SENT],\n            [BeaconEvent.OPERATION_REQUEST_SUCCESS]: [defaultEventCallbacks.OPERATION_REQUEST_SUCCESS],\n            [BeaconEvent.OPERATION_REQUEST_ERROR]: [defaultEventCallbacks.OPERATION_REQUEST_ERROR],\n            [BeaconEvent.SIGN_REQUEST_SENT]: [defaultEventCallbacks.SIGN_REQUEST_SENT],\n            [BeaconEvent.SIGN_REQUEST_SUCCESS]: [defaultEventCallbacks.SIGN_REQUEST_SUCCESS],\n            [BeaconEvent.SIGN_REQUEST_ERROR]: [defaultEventCallbacks.SIGN_REQUEST_ERROR],\n            // TODO: ENCRYPTION\n            // [BeaconEvent.ENCRYPT_REQUEST_SENT]: [defaultEventCallbacks.ENCRYPT_REQUEST_SENT],\n            // [BeaconEvent.ENCRYPT_REQUEST_SUCCESS]: [defaultEventCallbacks.ENCRYPT_REQUEST_SUCCESS],\n            // [BeaconEvent.ENCRYPT_REQUEST_ERROR]: [defaultEventCallbacks.ENCRYPT_REQUEST_ERROR],\n            [BeaconEvent.BROADCAST_REQUEST_SENT]: [defaultEventCallbacks.BROADCAST_REQUEST_SENT],\n            [BeaconEvent.BROADCAST_REQUEST_SUCCESS]: [defaultEventCallbacks.BROADCAST_REQUEST_SUCCESS],\n            [BeaconEvent.BROADCAST_REQUEST_ERROR]: [defaultEventCallbacks.BROADCAST_REQUEST_ERROR],\n            [BeaconEvent.ACKNOWLEDGE_RECEIVED]: [defaultEventCallbacks.ACKNOWLEDGE_RECEIVED],\n            [BeaconEvent.LOCAL_RATE_LIMIT_REACHED]: [defaultEventCallbacks.LOCAL_RATE_LIMIT_REACHED],\n            [BeaconEvent.NO_PERMISSIONS]: [defaultEventCallbacks.NO_PERMISSIONS],\n            [BeaconEvent.ACTIVE_ACCOUNT_SET]: [defaultEventCallbacks.ACTIVE_ACCOUNT_SET],\n            [BeaconEvent.ACTIVE_TRANSPORT_SET]: [defaultEventCallbacks.ACTIVE_TRANSPORT_SET],\n            [BeaconEvent.SHOW_PREPARE]: [defaultEventCallbacks.SHOW_PREPARE],\n            [BeaconEvent.HIDE_UI]: [defaultEventCallbacks.HIDE_UI],\n            [BeaconEvent.PAIR_INIT]: [defaultEventCallbacks.PAIR_INIT],\n            [BeaconEvent.PAIR_SUCCESS]: [defaultEventCallbacks.PAIR_SUCCESS],\n            [BeaconEvent.CHANNEL_CLOSED]: [defaultEventCallbacks.CHANNEL_CLOSED],\n            [BeaconEvent.INTERNAL_ERROR]: [defaultEventCallbacks.INTERNAL_ERROR],\n            [BeaconEvent.UNKNOWN]: [defaultEventCallbacks.UNKNOWN]\n        };\n        if (overrideAll) {\n            this.setAllHandlers();\n        }\n        this.overrideDefaults(eventsToOverride);\n    }\n    /**\n     * A method to subscribe to a specific beacon event and register a callback\n     *\n     * @param event The event being emitted\n     * @param eventCallback The callback that will be invoked\n     */\n    on(event, eventCallback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const listeners = this.callbackMap[event] || [];\n            listeners.push(eventCallback);\n            this.callbackMap[event] = listeners;\n        });\n    }\n    /**\n     * Emit a beacon event\n     *\n     * @param event The event being emitted\n     * @param data The data to be emit\n     */\n    emit(event, data, eventCallback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const listeners = this.callbackMap[event];\n            if (listeners && listeners.length > 0) {\n                listeners.forEach((listener) => __awaiter(this, void 0, void 0, function* () {\n                    try {\n                        yield listener(data, eventCallback);\n                    }\n                    catch (listenerError) {\n                        logger.error(`error handling event ${event}`, listenerError);\n                    }\n                }));\n            }\n        });\n    }\n    /**\n     * Override beacon event default callbacks. This can be used to disable default alert/toast behaviour\n     *\n     * @param eventsToOverride An object with the events to override\n     */\n    overrideDefaults(eventsToOverride) {\n        Object.keys(eventsToOverride).forEach((untypedEvent) => {\n            const eventType = untypedEvent;\n            const event = eventsToOverride[eventType];\n            if (event) {\n                this.callbackMap[eventType] = [event.handler];\n            }\n        });\n    }\n    /**\n     * Set all event callbacks to a specific handler.\n     */\n    setAllHandlers(handler) {\n        Object.keys(this.callbackMap).forEach((untypedEvent) => {\n            const eventType = untypedEvent;\n            this.callbackMap[eventType] = [];\n            if (handler) {\n                this.callbackMap[eventType].push(handler);\n            }\n            else {\n                this.callbackMap[eventType].push((...data) => {\n                    logger.log(untypedEvent, ...data);\n                });\n            }\n        });\n    }\n}\n//# sourceMappingURL=events.js.map"]},"metadata":{},"sourceType":"module"}