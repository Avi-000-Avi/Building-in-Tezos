{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { NetworkType } from '..';\nimport { BlockExplorer } from './block-explorer';\nexport class TezblockBlockExplorer extends BlockExplorer {\n  constructor(rpcUrls = {\n    [NetworkType.MAINNET]: 'https://tezblock.io',\n    [NetworkType.DELPHINET]: 'https://delphinet.tezblock.io',\n    [NetworkType.EDONET]: 'https://edonet.tezblock.io',\n    [NetworkType.FLORENCENET]: 'https://florencenet.tezblock.io',\n    [NetworkType.GRANADANET]: 'https://granadanet.tezblock.io',\n    [NetworkType.CUSTOM]: 'https://granadanet.tezblock.io'\n  }) {\n    super(rpcUrls);\n    this.rpcUrls = rpcUrls;\n  }\n\n  getAddressLink(address, network) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const blockExplorer = yield this.getLinkForNetwork(network);\n      return `${blockExplorer}/account/${address}`;\n    });\n  }\n\n  getTransactionLink(transactionId, network) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const blockExplorer = yield this.getLinkForNetwork(network);\n      return `${blockExplorer}/transaction/${transactionId}`;\n    });\n  }\n\n}","map":{"version":3,"sources":["../../../src/utils/tezblock-blockexplorer.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAkB,WAAlB,QAAqC,IAArC;AACA,SAAS,aAAT,QAA8B,kBAA9B;AAEA,OAAM,MAAO,qBAAP,SAAqC,aAArC,CAAkD;AACtD,EAAA,WAAA,CACkB,OAAA,GAA4C;AAC1D,KAAC,WAAW,CAAC,OAAb,GAAuB,qBADmC;AAE1D,KAAC,WAAW,CAAC,SAAb,GAAyB,+BAFiC;AAG1D,KAAC,WAAW,CAAC,MAAb,GAAsB,4BAHoC;AAI1D,KAAC,WAAW,CAAC,WAAb,GAA2B,iCAJ+B;AAK1D,KAAC,WAAW,CAAC,UAAb,GAA0B,gCALgC;AAM1D,KAAC,WAAW,CAAC,MAAb,GAAsB;AANoC,GAD9D,EAQG;AAED,UAAM,OAAN;AATgB,SAAA,OAAA,GAAA,OAAA;AAUjB;;AAEY,EAAA,cAAc,CAAC,OAAD,EAAkB,OAAlB,EAAkC;;AAC3D,YAAM,aAAa,GAAG,MAAM,KAAK,iBAAL,CAAuB,OAAvB,CAA5B;AAEA,aAAO,GAAG,aAAa,YAAY,OAAO,EAA1C;AACD,K;AAAA;;AACY,EAAA,kBAAkB,CAAC,aAAD,EAAwB,OAAxB,EAAwC;;AACrE,YAAM,aAAa,GAAG,MAAM,KAAK,iBAAL,CAAuB,OAAvB,CAA5B;AAEA,aAAO,GAAG,aAAa,gBAAgB,aAAa,EAApD;AACD,K;AAAA;;AAvBqD","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { NetworkType } from '..';\nimport { BlockExplorer } from './block-explorer';\nexport class TezblockBlockExplorer extends BlockExplorer {\n    constructor(rpcUrls = {\n        [NetworkType.MAINNET]: 'https://tezblock.io',\n        [NetworkType.DELPHINET]: 'https://delphinet.tezblock.io',\n        [NetworkType.EDONET]: 'https://edonet.tezblock.io',\n        [NetworkType.FLORENCENET]: 'https://florencenet.tezblock.io',\n        [NetworkType.GRANADANET]: 'https://granadanet.tezblock.io',\n        [NetworkType.CUSTOM]: 'https://granadanet.tezblock.io'\n    }) {\n        super(rpcUrls);\n        this.rpcUrls = rpcUrls;\n    }\n    getAddressLink(address, network) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const blockExplorer = yield this.getLinkForNetwork(network);\n            return `${blockExplorer}/account/${address}`;\n        });\n    }\n    getTransactionLink(transactionId, network) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const blockExplorer = yield this.getLinkForNetwork(network);\n            return `${blockExplorer}/transaction/${transactionId}`;\n        });\n    }\n}\n//# sourceMappingURL=tezblock-blockexplorer.js.map"]},"metadata":{},"sourceType":"module"}