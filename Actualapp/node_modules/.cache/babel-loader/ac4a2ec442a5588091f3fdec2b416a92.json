{"ast":null,"code":"'use strict';\n\nmodule.exports = API;\n\nvar chromeApi = require('./google-u2f-api'); // Feature detection (yes really)\n\n\nvar isBrowser = typeof navigator !== 'undefined' && !!navigator.userAgent;\nvar isSafari = isBrowser && navigator.userAgent.match(/Safari\\//) && !navigator.userAgent.match(/Chrome\\//);\nvar isEDGE = isBrowser && navigator.userAgent.match(/Edge\\/1[2345]/);\nvar _backend = null;\n\nfunction getBackend(Promise) {\n  if (!_backend) _backend = new Promise(function (resolve, reject) {\n    function notSupported() {\n      // Note; {native: true} means *not* using Google's hack\n      resolve({\n        u2f: null,\n        native: true\n      });\n    }\n\n    if (!isBrowser) return notSupported();\n    if (isSafari) // Safari doesn't support U2F, and the Safari-FIDO-U2F\n      // extension lacks full support (Multi-facet apps), so we\n      // block it until proper support.\n      return notSupported();\n    var hasNativeSupport = typeof window.u2f !== 'undefined' && typeof window.u2f.sign === 'function';\n    if (hasNativeSupport) resolve({\n      u2f: window.u2f,\n      native: true\n    });\n    if (isEDGE) // We don't want to check for Google's extension hack on EDGE\n      // as it'll cause trouble (popups, etc)\n      return notSupported();\n    if (location.protocol === 'http:') // U2F isn't supported over http, only https\n      return notSupported();\n    if (typeof MessageChannel === 'undefined') // Unsupported browser, the chrome hack would throw\n      return notSupported(); // Test for google extension support\n\n    chromeApi.isSupported(function (ok) {\n      if (ok) resolve({\n        u2f: chromeApi,\n        native: false\n      });else notSupported();\n    });\n  });\n  return _backend;\n}\n\nfunction API(Promise) {\n  return {\n    isSupported: isSupported.bind(Promise),\n    ensureSupport: ensureSupport.bind(Promise),\n    register: register.bind(Promise),\n    sign: sign.bind(Promise),\n    ErrorCodes: API.ErrorCodes,\n    ErrorNames: API.ErrorNames\n  };\n}\n\nAPI.ErrorCodes = {\n  CANCELLED: -1,\n  OK: 0,\n  OTHER_ERROR: 1,\n  BAD_REQUEST: 2,\n  CONFIGURATION_UNSUPPORTED: 3,\n  DEVICE_INELIGIBLE: 4,\n  TIMEOUT: 5\n};\nAPI.ErrorNames = {\n  \"-1\": \"CANCELLED\",\n  \"0\": \"OK\",\n  \"1\": \"OTHER_ERROR\",\n  \"2\": \"BAD_REQUEST\",\n  \"3\": \"CONFIGURATION_UNSUPPORTED\",\n  \"4\": \"DEVICE_INELIGIBLE\",\n  \"5\": \"TIMEOUT\"\n};\n\nfunction makeError(msg, err) {\n  var code = err != null ? err.errorCode : 1; // Default to OTHER_ERROR\n\n  var type = API.ErrorNames['' + code];\n  var error = new Error(msg);\n  error.metaData = {\n    type: type,\n    code: code\n  };\n  return error;\n}\n\nfunction deferPromise(Promise, promise) {\n  var ret = {};\n  ret.promise = new Promise(function (resolve, reject) {\n    ret.resolve = resolve;\n    ret.reject = reject;\n    promise.then(resolve, reject);\n  });\n  /**\n   * Reject request promise and disconnect port if 'disconnect' flag is true\n   * @param {string} msg\n   * @param {boolean} disconnect\n   */\n\n  ret.promise.cancel = function (msg, disconnect) {\n    getBackend(Promise).then(function (backend) {\n      if (disconnect && !backend.native) backend.u2f.disconnect();\n      ret.reject(makeError(msg, {\n        errorCode: -1\n      }));\n    });\n  };\n\n  return ret;\n}\n\nfunction defer(Promise, fun) {\n  return deferPromise(Promise, new Promise(function (resolve, reject) {\n    try {\n      fun && fun(resolve, reject);\n    } catch (err) {\n      reject(err);\n    }\n  }));\n}\n\nfunction isSupported() {\n  var Promise = this;\n  return getBackend(Promise).then(function (backend) {\n    return !!backend.u2f;\n  });\n}\n\nfunction _ensureSupport(backend) {\n  if (!backend.u2f) {\n    if (location.protocol === 'http:') throw new Error(\"U2F isn't supported over http, only https\");\n    throw new Error(\"U2F not supported\");\n  }\n}\n\nfunction ensureSupport() {\n  var Promise = this;\n  return getBackend(Promise).then(_ensureSupport);\n}\n\nfunction register(registerRequests, signRequests\n/* = null */\n, timeout) {\n  var Promise = this;\n  if (!Array.isArray(registerRequests)) registerRequests = [registerRequests];\n\n  if (typeof signRequests === 'number' && typeof timeout === 'undefined') {\n    timeout = signRequests;\n    signRequests = null;\n  }\n\n  if (!signRequests) signRequests = [];\n  return deferPromise(Promise, getBackend(Promise).then(function (backend) {\n    _ensureSupport(backend);\n\n    var native = backend.native;\n    var u2f = backend.u2f;\n    return new Promise(function (resolve, reject) {\n      function cbNative(response) {\n        if (response.errorCode) reject(makeError(\"Registration failed\", response));else {\n          delete response.errorCode;\n          resolve(response);\n        }\n      }\n\n      function cbChrome(err, response) {\n        if (err) reject(err);else if (response.errorCode) reject(makeError(\"Registration failed\", response));else resolve(response);\n      }\n\n      if (native) {\n        var appId = registerRequests[0].appId;\n        u2f.register(appId, registerRequests, signRequests, cbNative, timeout);\n      } else {\n        u2f.register(registerRequests, signRequests, cbChrome, timeout);\n      }\n    });\n  })).promise;\n}\n\nfunction sign(signRequests, timeout) {\n  var Promise = this;\n  if (!Array.isArray(signRequests)) signRequests = [signRequests];\n  return deferPromise(Promise, getBackend(Promise).then(function (backend) {\n    _ensureSupport(backend);\n\n    var native = backend.native;\n    var u2f = backend.u2f;\n    return new Promise(function (resolve, reject) {\n      function cbNative(response) {\n        if (response.errorCode) reject(makeError(\"Sign failed\", response));else {\n          delete response.errorCode;\n          resolve(response);\n        }\n      }\n\n      function cbChrome(err, response) {\n        if (err) reject(err);else if (response.errorCode) reject(makeError(\"Sign failed\", response));else resolve(response);\n      }\n\n      if (native) {\n        var appId = signRequests[0].appId;\n        var challenge = signRequests[0].challenge;\n        u2f.sign(appId, challenge, signRequests, cbNative, timeout);\n      } else {\n        u2f.sign(signRequests, cbChrome, timeout);\n      }\n    });\n  })).promise;\n}\n\nfunction makeDefault(func) {\n  API[func] = function () {\n    if (!global.Promise) // This is very unlikely to ever happen, since browsers\n      // supporting U2F will most likely support Promises.\n      throw new Error(\"The platform doesn't natively support promises\");\n    var args = [].slice.call(arguments);\n    return API(global.Promise)[func].apply(null, args);\n  };\n} // Provide default functions using the built-in Promise if available.\n\n\nmakeDefault('isSupported');\nmakeDefault('ensureSupport');\nmakeDefault('register');\nmakeDefault('sign');","map":{"version":3,"sources":["/home/avinash/Documents/taquito-react-template/node_modules/u2f-api/lib/u2f-api.js"],"names":["module","exports","API","chromeApi","require","isBrowser","navigator","userAgent","isSafari","match","isEDGE","_backend","getBackend","Promise","resolve","reject","notSupported","u2f","native","hasNativeSupport","window","sign","location","protocol","MessageChannel","isSupported","ok","bind","ensureSupport","register","ErrorCodes","ErrorNames","CANCELLED","OK","OTHER_ERROR","BAD_REQUEST","CONFIGURATION_UNSUPPORTED","DEVICE_INELIGIBLE","TIMEOUT","makeError","msg","err","code","errorCode","type","error","Error","metaData","deferPromise","promise","ret","then","cancel","disconnect","backend","defer","fun","_ensureSupport","registerRequests","signRequests","timeout","Array","isArray","cbNative","response","cbChrome","appId","challenge","makeDefault","func","global","args","slice","call","arguments","apply"],"mappings":"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","sourcesContent":["'use strict';\n\nmodule.exports = API;\n\nvar chromeApi = require( './google-u2f-api' );\n\n// Feature detection (yes really)\nvar isBrowser = ( typeof navigator !== 'undefined' ) && !!navigator.userAgent;\nvar isSafari = isBrowser && navigator.userAgent.match( /Safari\\// )\n\t&& !navigator.userAgent.match( /Chrome\\// );\nvar isEDGE = isBrowser && navigator.userAgent.match( /Edge\\/1[2345]/ );\n\nvar _backend = null;\nfunction getBackend( Promise )\n{\n\tif ( !_backend )\n\t\t_backend = new Promise( function( resolve, reject )\n\t\t{\n\t\t\tfunction notSupported( )\n\t\t\t{\n\t\t\t\t// Note; {native: true} means *not* using Google's hack\n\t\t\t\tresolve( { u2f: null, native: true } );\n\t\t\t}\n\n\t\t\tif ( !isBrowser )\n\t\t\t\treturn notSupported( );\n\n\t\t\tif ( isSafari )\n\t\t\t\t// Safari doesn't support U2F, and the Safari-FIDO-U2F\n\t\t\t\t// extension lacks full support (Multi-facet apps), so we\n\t\t\t\t// block it until proper support.\n\t\t\t\treturn notSupported( );\n\n\t\t\tvar hasNativeSupport =\n\t\t\t\t( typeof window.u2f !== 'undefined' ) &&\n\t\t\t\t( typeof window.u2f.sign === 'function' );\n\n\t\t\tif ( hasNativeSupport )\n\t\t\t\tresolve( { u2f: window.u2f, native: true } );\n\n\t\t\tif ( isEDGE )\n\t\t\t\t// We don't want to check for Google's extension hack on EDGE\n\t\t\t\t// as it'll cause trouble (popups, etc)\n\t\t\t\treturn notSupported( );\n\n\t\t\tif ( location.protocol === 'http:' )\n\t\t\t\t// U2F isn't supported over http, only https\n\t\t\t\treturn notSupported( );\n\n\t\t\tif ( typeof MessageChannel === 'undefined' )\n\t\t\t\t// Unsupported browser, the chrome hack would throw\n\t\t\t\treturn notSupported( );\n\n\t\t\t// Test for google extension support\n\t\t\tchromeApi.isSupported( function( ok )\n\t\t\t{\n\t\t\t\tif ( ok )\n\t\t\t\t\tresolve( { u2f: chromeApi, native: false } );\n\t\t\t\telse\n\t\t\t\t\tnotSupported( );\n\t\t\t} );\n\t\t} );\n\n\treturn _backend;\n}\n\nfunction API( Promise )\n{\n\treturn {\n\t\tisSupported   : isSupported.bind( Promise ),\n\t\tensureSupport : ensureSupport.bind( Promise ),\n\t\tregister      : register.bind( Promise ),\n\t\tsign          : sign.bind( Promise ),\n\t\tErrorCodes    : API.ErrorCodes,\n\t\tErrorNames    : API.ErrorNames\n\t};\n}\n\nAPI.ErrorCodes = {\n\tCANCELLED: -1,\n\tOK: 0,\n\tOTHER_ERROR: 1,\n\tBAD_REQUEST: 2,\n\tCONFIGURATION_UNSUPPORTED: 3,\n\tDEVICE_INELIGIBLE: 4,\n\tTIMEOUT: 5\n};\nAPI.ErrorNames = {\n\t\"-1\": \"CANCELLED\",\n\t\"0\": \"OK\",\n\t\"1\": \"OTHER_ERROR\",\n\t\"2\": \"BAD_REQUEST\",\n\t\"3\": \"CONFIGURATION_UNSUPPORTED\",\n\t\"4\": \"DEVICE_INELIGIBLE\",\n\t\"5\": \"TIMEOUT\"\n};\n\nfunction makeError( msg, err )\n{\n\tvar code = err != null ? err.errorCode : 1; // Default to OTHER_ERROR\n\tvar type = API.ErrorNames[ '' + code ];\n\tvar error = new Error( msg );\n\terror.metaData = {\n\t\ttype: type,\n\t\tcode: code\n\t}\n\treturn error;\n}\n\nfunction deferPromise( Promise, promise )\n{\n\tvar ret = { };\n\tret.promise = new Promise( function( resolve, reject ) {\n\t\tret.resolve = resolve;\n\t\tret.reject = reject;\n\t\tpromise.then( resolve, reject );\n\t} );\n\t/**\n\t * Reject request promise and disconnect port if 'disconnect' flag is true\n\t * @param {string} msg\n\t * @param {boolean} disconnect\n\t */\n\tret.promise.cancel = function( msg, disconnect )\n\t{\n\t\tgetBackend( Promise )\n\t\t.then( function( backend )\n\t\t{\n\t\t\tif ( disconnect && !backend.native )\n\t\t\t\tbackend.u2f.disconnect( );\n\n\t\t\tret.reject( makeError( msg, { errorCode: -1 } ) );\n\t\t} );\n\t};\n\treturn ret;\n}\n\nfunction defer( Promise, fun )\n{\n\treturn deferPromise( Promise, new Promise( function( resolve, reject )\n\t{\n\t\ttry\n\t\t{\n\t\t\tfun && fun( resolve, reject );\n\t\t}\n\t\tcatch ( err )\n\t\t{\n\t\t\treject( err );\n\t\t}\n\t} ) );\n}\n\nfunction isSupported( )\n{\n\tvar Promise = this;\n\n\treturn getBackend( Promise )\n\t.then( function( backend )\n\t{\n\t\treturn !!backend.u2f;\n\t} );\n}\n\nfunction _ensureSupport( backend )\n{\n\tif ( !backend.u2f )\n\t{\n\t\tif ( location.protocol === 'http:' )\n\t\t\tthrow new Error( \"U2F isn't supported over http, only https\" );\n\t\tthrow new Error( \"U2F not supported\" );\n\t}\n}\n\nfunction ensureSupport( )\n{\n\tvar Promise = this;\n\n\treturn getBackend( Promise )\n\t.then( _ensureSupport );\n}\n\nfunction register( registerRequests, signRequests /* = null */, timeout )\n{\n\tvar Promise = this;\n\n\tif ( !Array.isArray( registerRequests ) )\n\t\tregisterRequests = [ registerRequests ];\n\n\tif ( typeof signRequests === 'number' && typeof timeout === 'undefined' )\n\t{\n\t\ttimeout = signRequests;\n\t\tsignRequests = null;\n\t}\n\n\tif ( !signRequests )\n\t\tsignRequests = [ ];\n\n\treturn deferPromise( Promise, getBackend( Promise )\n\t.then( function( backend )\n\t{\n\t\t_ensureSupport( backend );\n\n\t\tvar native = backend.native;\n\t\tvar u2f = backend.u2f;\n\n\t\treturn new Promise( function( resolve, reject )\n\t\t{\n\t\t\tfunction cbNative( response )\n\t\t\t{\n\t\t\t\tif ( response.errorCode )\n\t\t\t\t\treject( makeError( \"Registration failed\", response ) );\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdelete response.errorCode;\n\t\t\t\t\tresolve( response );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction cbChrome( err, response )\n\t\t\t{\n\t\t\t\tif ( err )\n\t\t\t\t\treject( err );\n\t\t\t\telse if ( response.errorCode )\n\t\t\t\t\treject( makeError( \"Registration failed\", response ) );\n\t\t\t\telse\n\t\t\t\t\tresolve( response );\n\t\t\t}\n\n\t\t\tif ( native )\n\t\t\t{\n\t\t\t\tvar appId = registerRequests[ 0 ].appId;\n\n\t\t\t\tu2f.register(\n\t\t\t\t\tappId, registerRequests, signRequests, cbNative, timeout );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tu2f.register(\n\t\t\t\t\tregisterRequests, signRequests, cbChrome, timeout );\n\t\t\t}\n\t\t} );\n\t} ) ).promise;\n}\n\nfunction sign( signRequests, timeout )\n{\n\tvar Promise = this;\n\n\tif ( !Array.isArray( signRequests ) )\n\t\tsignRequests = [ signRequests ];\n\n\treturn deferPromise( Promise, getBackend( Promise )\n\t.then( function( backend )\n\t{\n\t\t_ensureSupport( backend );\n\n\t\tvar native = backend.native;\n\t\tvar u2f = backend.u2f;\n\n\t\treturn new Promise( function( resolve, reject )\n\t\t{\n\t\t\tfunction cbNative( response )\n\t\t\t{\n\t\t\t\tif ( response.errorCode )\n\t\t\t\t\treject( makeError( \"Sign failed\", response ) );\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdelete response.errorCode;\n\t\t\t\t\tresolve( response );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction cbChrome( err, response )\n\t\t\t{\n\t\t\t\tif ( err )\n\t\t\t\t\treject( err );\n\t\t\t\telse if ( response.errorCode )\n\t\t\t\t\treject( makeError( \"Sign failed\", response ) );\n\t\t\t\telse\n\t\t\t\t\tresolve( response );\n\t\t\t}\n\n\t\t\tif ( native )\n\t\t\t{\n\t\t\t\tvar appId = signRequests[ 0 ].appId;\n\t\t\t\tvar challenge = signRequests[ 0 ].challenge;\n\n\t\t\t\tu2f.sign( appId, challenge, signRequests, cbNative, timeout );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tu2f.sign( signRequests, cbChrome, timeout );\n\t\t\t}\n\t\t} );\n\t} ) ).promise;\n}\n\nfunction makeDefault( func )\n{\n\tAPI[ func ] = function( )\n\t{\n\t\tif ( !global.Promise )\n\t\t\t// This is very unlikely to ever happen, since browsers\n\t\t\t// supporting U2F will most likely support Promises.\n\t\t\tthrow new Error( \"The platform doesn't natively support promises\" );\n\n\t\tvar args = [ ].slice.call( arguments );\n\t\treturn API( global.Promise )[ func ].apply( null, args );\n\t};\n}\n\n// Provide default functions using the built-in Promise if available.\nmakeDefault( 'isSupported' );\nmakeDefault( 'ensureSupport' );\nmakeDefault( 'register' );\nmakeDefault( 'sign' );\n"]},"metadata":{},"sourceType":"script"}