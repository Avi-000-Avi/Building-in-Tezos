{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nexport class MatrixUserService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  /**\n   * Log in to the matrix node with username and password\n   *\n   * @param user\n   * @param password\n   * @param deviceId\n   */\n\n\n  login(user, password, deviceId) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.httpClient.post('/login', {\n        type: 'm.login.password',\n        identifier: {\n          type: 'm.id.user',\n          user\n        },\n        password,\n        device_id: deviceId\n      });\n    });\n  }\n\n}","map":{"version":3,"sources":["../../../../src/matrix-client/services/MatrixUserService.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,OAAM,MAAO,iBAAP,CAAwB;AAC5B,EAAA,WAAA,CAA6B,UAA7B,EAAyD;AAA5B,SAAA,UAAA,GAAA,UAAA;AAAgC;AAE7D;;;;;;AAMG;;;AACU,EAAA,KAAK,CAChB,IADgB,EAEhB,QAFgB,EAGhB,QAHgB,EAGA;;AAEhB,aAAO,KAAK,UAAL,CAAgB,IAAhB,CAA0C,QAA1C,EAAoD;AACzD,QAAA,IAAI,EAAE,kBADmD;AAEzD,QAAA,UAAU,EAAE;AACV,UAAA,IAAI,EAAE,WADI;AAEV,UAAA;AAFU,SAF6C;AAMzD,QAAA,QANyD;AAOzD,QAAA,SAAS,EAAE;AAP8C,OAApD,CAAP;AASD,K;AAAA;;AAxB2B","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport class MatrixUserService {\n    constructor(httpClient) {\n        this.httpClient = httpClient;\n    }\n    /**\n     * Log in to the matrix node with username and password\n     *\n     * @param user\n     * @param password\n     * @param deviceId\n     */\n    login(user, password, deviceId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.httpClient.post('/login', {\n                type: 'm.login.password',\n                identifier: {\n                    type: 'm.id.user',\n                    user\n                },\n                password,\n                device_id: deviceId\n            });\n        });\n    }\n}\n//# sourceMappingURL=MatrixUserService.js.map"]},"metadata":{},"sourceType":"module"}