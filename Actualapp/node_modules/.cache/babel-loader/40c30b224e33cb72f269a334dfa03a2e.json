{"ast":null,"code":"var _jsxFileName = \"/home/avinash/Documents/Actualapp/src/components/Transfers.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Transfers = ({\n  Tezos,\n  setUserBalance,\n  userAddress\n}) => {\n  _s();\n\n  const [recipient, setRecipient] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const sendTransfer = async () => {\n    if (recipient && amount) {\n      setLoading(true);\n\n      try {\n        const op = await Tezos.wallet.transfer({\n          to: recipient,\n          amount: parseInt(amount)\n        }).send();\n        await op.confirmation();\n        setRecipient(\"\");\n        setAmount(\"\");\n        const balance = await Tezos.tz.getBalance(userAddress);\n        setUserBalance(balance.toNumber());\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"transfer-inputs\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Recipient\",\n      value: recipient,\n      onChange: e => setRecipient(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Amount\",\n      value: amount,\n      onChange: e => setAmount(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      disabled: !recipient && !amount,\n      onClick: sendTransfer,\n      children: loading ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-spinner fa-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), \"\\xA0 Please wait\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"far fa-paper-plane\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), \"\\xA0 Send\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Transfers, \"zfXTBuBTmF3/DDR90zlripqol9Q=\");\n\n_c = Transfers;\nexport default Transfers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transfers\");","map":{"version":3,"sources":["/home/avinash/Documents/Actualapp/src/components/Transfers.tsx"],"names":["React","useState","Transfers","Tezos","setUserBalance","userAddress","recipient","setRecipient","amount","setAmount","loading","setLoading","sendTransfer","op","wallet","transfer","to","parseInt","send","confirmation","balance","tz","getBalance","toNumber","error","console","log","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA0D,OAA1D;;;AAGA,MAAMC,SAAS,GAAG,CAAC;AACjBC,EAAAA,KADiB;AAEjBC,EAAAA,cAFiB;AAGjBC,EAAAA;AAHiB,CAAD,KAQC;AAAA;;AACjB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAS,EAAT,CAA1C;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAS,EAAT,CAApC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAU,KAAV,CAAtC;;AAEA,QAAMW,YAAY,GAAG,YAA2B;AAC9C,QAAIN,SAAS,IAAIE,MAAjB,EAAyB;AACvBG,MAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAI;AACF,cAAME,EAAE,GAAG,MAAMV,KAAK,CAACW,MAAN,CACdC,QADc,CACL;AAAEC,UAAAA,EAAE,EAAEV,SAAN;AAAiBE,UAAAA,MAAM,EAAES,QAAQ,CAACT,MAAD;AAAjC,SADK,EAEdU,IAFc,EAAjB;AAGA,cAAML,EAAE,CAACM,YAAH,EAAN;AACAZ,QAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,QAAAA,SAAS,CAAC,EAAD,CAAT;AACA,cAAMW,OAAO,GAAG,MAAMjB,KAAK,CAACkB,EAAN,CAASC,UAAT,CAAoBjB,WAApB,CAAtB;AACAD,QAAAA,cAAc,CAACgB,OAAO,CAACG,QAAR,EAAD,CAAd;AACD,OATD,CASE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OAXD,SAWU;AACRb,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF;AACF,GAlBD;;AAoBA,sBACE;AAAK,IAAA,EAAE,EAAC,iBAAR;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,WAFd;AAGE,MAAA,KAAK,EAAEL,SAHT;AAIE,MAAA,QAAQ,EAAEqB,CAAC,IAAIpB,YAAY,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ7B;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,WAAW,EAAC,QAFd;AAGE,MAAA,KAAK,EAAErB,MAHT;AAIE,MAAA,QAAQ,EAAEmB,CAAC,IAAIlB,SAAS,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ1B;AAAA;AAAA;AAAA;AAAA,YAPF,eAaE;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,QAAQ,EAAE,CAACvB,SAAD,IAAc,CAACE,MAF3B;AAGE,MAAA,OAAO,EAAEI,YAHX;AAAA,gBAKGF,OAAO,gBACN;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cADM,gBAKN;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CAhED;;GAAMR,S;;KAAAA,S;AAkEN,eAAeA,SAAf","sourcesContent":["import React, { useState, Dispatch, SetStateAction } from \"react\";\nimport { TezosToolkit } from \"@taquito/taquito\";\n\nconst Transfers = ({\n  Tezos,\n  setUserBalance,\n  userAddress\n}: {\n  Tezos: TezosToolkit;\n  setUserBalance: Dispatch<SetStateAction<number>>;\n  userAddress: string;\n}): JSX.Element => {\n  const [recipient, setRecipient] = useState<string>(\"\");\n  const [amount, setAmount] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const sendTransfer = async (): Promise<void> => {\n    if (recipient && amount) {\n      setLoading(true);\n      try {\n        const op = await Tezos.wallet\n          .transfer({ to: recipient, amount: parseInt(amount) })\n          .send();\n        await op.confirmation();\n        setRecipient(\"\");\n        setAmount(\"\");\n        const balance = await Tezos.tz.getBalance(userAddress);\n        setUserBalance(balance.toNumber());\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n\n  return (\n    <div id=\"transfer-inputs\">\n      <input\n        type=\"text\"\n        placeholder=\"Recipient\"\n        value={recipient}\n        onChange={e => setRecipient(e.target.value)}\n      />\n      <input\n        type=\"number\"\n        placeholder=\"Amount\"\n        value={amount}\n        onChange={e => setAmount(e.target.value)}\n      />\n      <button\n        className=\"button\"\n        disabled={!recipient && !amount}\n        onClick={sendTransfer}\n      >\n        {loading ? (\n          <span>\n            <i className=\"fas fa-spinner fa-spin\"></i>&nbsp; Please wait\n          </span>\n        ) : (\n          <span>\n            <i className=\"far fa-paper-plane\"></i>&nbsp; Send\n          </span>\n        )}\n      </button>\n    </div>\n  );\n};\n\nexport default Transfers;\n"]},"metadata":{},"sourceType":"module"}